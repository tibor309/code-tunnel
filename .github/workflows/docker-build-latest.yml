name: "Scheduled build"
on:
  schedule:
    - cron: "0 1 1 * *"

permissions:
  contents: read
  packages: write

jobs:
  get-date:
    runs-on: ubuntu-latest
    outputs:
      IMG_DATE: ${{ steps.date.outputs.IMG_DATE }}
    steps:
      - name: Get current date in RFC 3339
        id: date
        run: |
          IMG_DATE=$(date --rfc-3339=seconds | sed 's/ /T/')
          echo "IMG_DATE=${IMG_DATE}" >> $GITHUB_OUTPUT
          echo "The date is $IMG_DATE"

  get-version:
    runs-on: ubuntu-latest
    outputs:
      PKG_VER: ${{ steps.version.outputs.PKG_VER }}
    steps:
      - name: Download package
        run: |
          wget -vO vscode_cli.tar.gz "https://code.visualstudio.com/sha/download?build=stable&os=cli-alpine-x64"

      - name: Extract package
        run: |
          tar -xvf vscode_cli.tar.gz

      - name: Get package version
        id: version
        run: |
          PKG_VER=$(./code --version | awk '{print $2}')
          echo "PKG_VER=${PKG_VER}" >> $GITHUB_OUTPUT
          echo "The package version is $PKG_VER"

  rebuild:
    runs-on: ubuntu-latest
    needs: [get-date, get-version]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: tibor309
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image for amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          file: ./Dockerfile
          push: true
          provenance: false
          build-args: |
            IMAGE_BUILD_DATE=${{ needs.get-date.outputs.IMG_DATE }}
          tags: |
            ghcr.io/tibor309/${{ secrets.DEV_REPO }}:${{ needs.get-version.outputs.PKG_VER }}-amd64
      
      - name: Build image for arm64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          file: ./Dockerfile.aarch64
          push: true
          provenance: false
          build-args: |
            IMAGE_BUILD_DATE=${{ needs.get-date.outputs.IMG_DATE }}
          tags: |
            ghcr.io/tibor309/${{ secrets.DEV_REPO }}:${{ needs.get-version.outputs.PKG_VER }}-arm64

      - name: Create image manifest with version tag
        run: |
          docker manifest create ghcr.io/tibor309/code-tunnel:${{ needs.get-version.outputs.PKG_VER }} \
            --amend ghcr.io/tibor309/${{ secrets.DEV_REPO }}:${{ needs.get-version.outputs.PKG_VER }}-amd64 \
            --amend ghcr.io/tibor309/${{ secrets.DEV_REPO }}:${{ needs.get-version.outputs.PKG_VER }}-arm64

      - name: Create image manifest with latest tag
        run: |
          docker manifest create ghcr.io/tibor309/code-tunnel:latest \
            --amend ghcr.io/tibor309/${{ secrets.DEV_REPO }}:${{ needs.get-version.outputs.PKG_VER }}-amd64 \
            --amend ghcr.io/tibor309/${{ secrets.DEV_REPO }}:${{ needs.get-version.outputs.PKG_VER }}-arm64
    
      - name: Push image manifests
        run: |
          docker manifest push ghcr.io/tibor309/code-tunnel:latest
          docker manifest push ghcr.io/tibor309/code-tunnel:${{ needs.get-version.outputs.PKG_VER }}
